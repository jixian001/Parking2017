@model Parking.Web.Areas.CustomManager.Models.ChangeDeadlineModel

@{
    ViewBag.Title = "修改期限";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<div class="row">
    <div class="col-md-2">@Html.Partial("_PartialSideNav")</div>
    <div class="col-md-10">
        <div class="row">
            <ol class="breadcrumb">
                <li><span class="glyphicon glyphicon-home">&nbsp;@Html.ActionLink("首页", "Index", "Home", new { area = "" }, htmlAttributes: new { @class = "" })</span></li>
                <li>顾客管理</li>
                <li>车主管理</li>
                <li class="active">修改使用期限</li>
            </ol>
        </div>
        <div class="row">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserCode, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Type, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OldDeadline, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OldDeadline, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OldDeadline, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NewDeadline, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="date" class="form-control form_datetime" id="NewDeadline" name="NewDeadline" placeholder="格式：2017-01-01 00:00" />
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="修 改" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts{
    <script>
        $(function () {
            $('.form_datetime').datetimepicker({
                language: 'zh-CN',
                weekStart: 1,
                todayBtn: 1,
                autoclose: 1,
                todayHighlight: 1,
                startView: 2,
                forceParse: 0,
                showMeridian: 1
            });

            $("#OldDeadline").attr("readonly", "readonly");
            $("#UserCode").attr("readonly", "readonly");


            $("#NewDeadline").val(getNowFormatDate(0));

            //获取当前时间
            function getNowFormatDate(num) {
                var date = new Date();
                date.setMinutes(date.getMinutes() - num);
                var seperator1 = "-";
                var seperator2 = ":";
                var month = date.getMonth() + 1;
                var strDate = date.getDate();
                if (month >= 1 && month <= 9) {
                    month = "0" + month;
                }
                if (strDate >= 0 && strDate <= 9) {
                    strDate = "0" + strDate;
                }
                var hour = date.getHours();
                if (hour >= 0 && hour <= 9) {
                    hour = "0" + hour;
                }
                var minute = date.getMinutes();
                if (minute >= 0 && minute <= 9) {
                    minute = "0" + minute;
                }
                var second = date.getSeconds();
                if (second >= 0 && second <= 9) {
                    second = "0" + second;
                }

                var currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate
                    + " " + hour + seperator2 + minute + seperator2 + second;
                return currentdate;
            }
        })
    </script>
}
