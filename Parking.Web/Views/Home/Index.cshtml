@{
    Layout = "~/Views/Shared/_Special.cshtml";
    ViewBag.Title = "主页";
}
<div class="row">
    <div id="myCarousel" class="carousel slide">
        <ol class="carousel-indicators">
            <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
            <li data-target="#myCarousel" data-slide-to="1"></li>
            <li data-target="#myCarousel" data-slide-to="2"></li>
        </ol>
        <div class="carousel-inner">
            <div class="item active" align="center">
                <img src="~/Content/Picture/first.png" alt="First slide" style="height:200px" />
            </div>
            <div class="item" align="center">
                <img src="~/Content/Picture/second.png" alt="Second slide" style="height:200px" />
            </div>
            <div class="item" align="center">
                <img src="~/Content/Picture/three.png" alt="Three slide" style="height:200px" />
            </div>
        </div>
        <a class="carousel-control left" href="#myCarousel" data-slide="prev">&lsaquo;</a>
        <a class="carousel-control right" href="#myCarousel" data-slide="next">&rsaquo;</a>
    </div>
</div>
<br />
<div class="row">
    <span class="text-primary">车位分布</span>
</div>
<div class="row seat bger">
    <div class="seat wrapper">
        <div class="col-md-10" id="seat">
            @* 平面移动库 *@
            <div id="PPY" style="display:none">
                @* 1号库 *@
                <input type="hidden" value="1" id="wh1" name="wh1" />
                <div id="L3-map">
                    <span>&nbsp;&nbsp; 三层</span>
                    <hr />
                </div>
                <div id="L2-map">
                    <span>&nbsp;&nbsp;二层</span>
                    <hr />
                </div>
                <div id="L1-map">
                    <span>&nbsp;&nbsp;一层</span>
                    <hr />
                </div>
            </div>
            @*  巷道堆垛 *@
            <div id="PXD" style="display:none">
                @* 1号库 *@
                <input type="hidden" value="1" id="wh1" name="wh1" />
                <div id="layout-map">                    
                </div>
            </div>
        </div>
        <div class="col-md-2">
           <div class="booking-details" id="details">
               <br />
               <input type="hidden" id="lctn" name="lctn" />
               <h3 class="text-center">已选中的车位(<span id="addr">0</span>)：</h3>
               <ul id="selected-seats"></ul>
               <br />
               <div id="oprt" class="text-center" style="display:none">
                   <button class="checkout-button" id="btnenable">启用</button>
                   <button class="checkout-button" id="btndisable">禁用</button>                  
               </div>
               <br />
               <div style="border:1px solid #808080">
                   <div class="text-info text-center">
                       <a data-toggle="collapse" href="#one">车位颜色定义</a>
                   </div>
                   <div id="one" class="panel-collapse collapse text-center">                      
                           <div class="lbl lblhall">车厅</div>
                           <div class="lbl lbldisable">禁用</div>
                           <div class="lbl lblinvalid">无效</div>
                           <div class="lbl lbltemp">缓存</div>
                           <div class="lbl lbldisabletemp">缓禁</div>
                           <div class="lbl lbloccupy">占用</div>
                           <div class="lbl lblentering">入库</div>
                           <div class="lbl lblouting">出库</div>
                           <div class="lbl lblspace">空闲</div>                      
                   </div>
               </div>
           </div>        
        </div>
    </div>
</div>
<div class="row">
    <span class="text-primary">设备信息</span>
</div>
<div id="devices" class="row bger">
</div>

@section scripts{
    @Styles.Render("~/Content/loccharts")
    @Scripts.Render("~/bundles/loccharts")
    @Styles.Render("~/Content/common")
    @Styles.Render("~/Content/devform")
    <script>
        $(function () {

            //加载车位信息
            //目前先手动设置，到后面，改为ajax试试
            var side = 2, column = 20, layer = 3;
            var warehouse = $("input[name='wh1']").val();
            //计算，固定div及设置cell宽度
            var width = $('#seat').width()-20;           
            //先设置3层
            var l3_map = [];
            for (var i = 0; i < side + 1; i++)
            {
                var row = '';
                for (var j = 0; j < column; j++)
                {
                    if (i == side-1) {
                        row += '_';
                        continue;
                    }
                    row += 'e';
                }
                l3_map.push(row);
            }
           
            var l3_sc = $('#L3-map').seatCharts({
                map: l3_map,
                seats: {                    
                    e: {                      
                        classes: 'normal-class', //your custom CSS class
                        category: '正常'
                    }
                },
                naming: {
                    top: false,
                    left: false,
                    getLabel: function (character, row, column) {
                        return column;
                    },
                    getId: function (character, row, column) {
                        var rw = row;
                        if (row >= 3) {
                            rw = row - 1;
                        }
                        return warehouse + '_' + rw + '_' + column + '_' + 3;
                    }
                },
                click: function () {                    
                    var msg = this.settings.id;
                    var arr = msg.split("_");
                    if (arr.length < 4)
                    {
                        alert(this.settings.id + " 数组长度不对！");
                        return;
                    }
                    displayInfo(msg);

                    return this.status();
                },
                blur: function () {
                    return this.status();
                }
            });

            var l2_sc = $('#L2-map').seatCharts({
                map: l3_map,
                seats: {
                    e: {
                        classes: 'economy-class', //your custom CSS class
                        category: '经济舱'
                    }
                },
                naming: {
                    top: false,
                    left: false,
                    getLabel: function (character, row, column) {
                        return column;
                    },
                    getId: function (character, row, column) {
                        var rw = row;
                        if (row >= 3) {
                            rw = row - 1;
                        }
                        return warehouse + '_' + rw + '_' + column + '_' + 2;
                    }
                },
                click: function () {
                    $('#cart-item-' + this.settings.id).remove();
                    var msg = this.settings.id;
                    var arr = msg.split("_");
                    if (arr.length < 4)
                    {
                        alert(this.settings.id + " 数组长度不对！");
                        return;
                    }
                    displayInfo(msg);
                    return this.status();
                },
                blur: function () {
                    return this.status();
                }
            });

            var l1_sc = $('#L1-map').seatCharts({
                map: l3_map,
                seats: {
                    e: {
                        classes: 'economy-class', //your custom CSS class
                        category: '经济舱'
                    }
                },
                naming: {
                    top: false,
                    left: false,
                    getLabel: function (character, row, column) {
                        return column;
                    },
                    getId: function (character, row, column) {
                        var rw = row;
                        if (row >= 3) {
                            rw = row - 1;
                        }
                        return warehouse + '_' + rw + '_' + column + '_' + 1;
                    }
                },
                click: function () {
                    
                    var msg = this.settings.id;
                    var arr = msg.split("_");
                    if (arr.length < 4)
                    {
                        alert(this.settings.id + " 数组长度不对！");
                        return;
                    }
                    displayInfo(msg);
                    return this.status();
                },
                blur: function () {
                    return this.status();
                }
            });

            //动态修改单元格宽高
            $('div .seatCharts-container').width(width);
            var $seatcell = $('div .seatCharts-cell');
            var cellMargin = 3;
            var cell = (width - column * (cellMargin * 2)) / column;
            $('div .seatCharts-cell').width(cell);
            $('div .seatCharts-cell').height(cell);

            //单击单元格时，显示车位信息
            function displayInfo(msg) {
                console.log("selected location :" + msg);
                $("input[name='lctn']").val(msg);
                var $disp = $("#selected-seats");
                var $addrs = $("#addr");
                var $btn = $("#oprt");
                $addrs.text('');
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetLocation")",
                    data: { locinfo:msg},
                    dataType: "json",
                    cache: false,
                    beforeSend: function (XMLHttpRequest) {
                        $addrs.text('0');
                        $disp.html('<li>加载中...</li>');
                        $btn.css("display","none");
                    },
                    success: function (nback) {                        
                        if (nback.code == 1)
                        {
                            var obj = nback.data;
                            $addrs.text(obj.Address);
                            var html = '<li>库区：' + obj.Warehouse + '</li>';
                            $disp.html(html);
                            html = '<li>地址：' + obj.LocSide + '边' + obj.LocColumn + '列' + obj.LocLayer + '层</li>';
                            $disp.append(html);
                            html = '<li id="li_type">类型：' + obj.Type + '</li>';
                            $disp.append(html);
                            html = '<li>状态：' + obj.Status + '</li>';
                            $disp.append(html);
                            html = '<li>车位尺寸：<b>' + obj.LocSize + '</b></li>';
                            $disp.append(html);
                            html = '<li>用户卡号：' + obj.ICCode + '</li>';
                            $disp.append(html);
                            html = '<li>轴距：' + obj.WheelBase + '</li>';
                            $disp.append(html);
                            html = '<li>车辆外形：' + obj.CarSize + '</li>';
                            $disp.append(html);
                            html = '<li>车牌：' + obj.PlateNum + '</li>';
                            $disp.append(html);
                            html = '<li>入库时间：<br/>' +formatDate(obj.InDate) + '</li>';
                            $disp.append(html);

                            $btn.css("display", "block");
                        }
                        else
                        {
                            $disp.html('<li>' + nback.data + '</li>');
                        }
                    },
                    complete: function (XMLHttpRequest, textStatus) {
                        
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                    }
                });

                return 'selected';
            }            
          
            //加载设备信息
            setTimeout(function () {

                var $devs = $("#devices");
                //获取设备信息，显示出来
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetDeviceList")",
                    dataType: "json",
                    cache: false,
                    beforeSend: function (XMLHttpRequest) {
                        $devs.html('<p class="text-info text-center">努力加载中...</p>');
                    },
                    success: function (data) {
                        var i = 0;
                        var html = '';
                        $.each(data, function (index, obj) {
                            if (i == 0) {
                                html = '<div class="row">';
                            }
                            else if (i % 4 == 0) {
                                html += '</div><div class="row">';
                            }
                            html += '<div class="col-md-3"><div class="dev">';
                            var info = '<table class="form" id="' + obj.DeviceCode + '">';

                            info += '<tr><th class="formTitle">' + "设备" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="code" value="' + obj.DeviceCode + '" disabled/></td></tr>';
                            info += '<tr><th class="formTitle">' + "地址" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="address" value=" ' + obj.Address + '" disabled/></td></tr>';
                            info += '<tr><th class="formTitle">' + "模式" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="mode"  value="' + obj.Mode + '" disabled/></td></tr>';
                            info += '<tr><th class="formTitle">' + "是否可用" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="able" value="' + obj.IsAble + '" disabled/></td></tr>';
                            info += '<tr><th class="formTitle">' + "接收指令" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="accept" value="' + obj.IsAvailabe + '" disabled/></td></tr>';
                            info += '<tr><th class="formTitle">' + "自动步" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="step" value="' + obj.RunStep + '"  disabled/></td></tr>';
                            if (obj.DeviceCode < 10) {
                                info += '<tr><th class="formTitle">' + "装载步进" + '</th>';
                                info += '<td class="formValue"><input type="text" class="form-control" id="loadstep" value="' + obj.InStep + '"  disabled/></td></tr>';
                                info += '<tr><th class="formTitle">' + "卸载步进" + '</th>';
                                info += '<td class="formValue"><input type="text" class="form-control" id="unloadstep" value="' + obj.OutStep + '"  disabled/></td></tr>';
                            } else {
                                info += '<tr><th class="formTitle">' + "存车步进" + '</th>';
                                info += '<td class="formValue"><input type="text" class="form-control" id="instep" value="' + obj.InStep + '"  disabled/></td></tr>';
                                info += '<tr><th class="formTitle">' + "取车步进" + '</th>';
                                info += '<td class="formValue"><input type="text" class="form-control" id="outstep" value="' + obj.OutStep + '"  disabled/></td></tr>';
                            }

                            info += '</table>';

                            html += info + '</div></div>';
                            i++;
                        });
                        html += '</div>';
                        $devs.html(html);
                    },
                    complete: function (XMLHttpRequest, textStatus) {

                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                    }
                });

                //初始化车位数据
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetLocationList")",
                    dataType: "json",
                    cache: false,
                    success: function (resp) {                       
                        if (resp.code == 1) {
                            $.each(resp.data, function (index, obj) {
                                var whs = obj.Warehouse;                                
                                if (whs == 1)
                                {
                                    var ly = obj.LocLayer;
                                    var clmn = obj.LocColumn;
                                    var sd = obj.LocSide;
                                    var mark = whs + '_' + sd + '_' + clmn + '_' + ly;
                                    var color = setlocationcolor(obj.Type, obj.Status);                                   
                                    if (ly == 1) 
                                    {
                                        l1_sc.get([mark]).status(color);
                                    }
                                    else if (ly == 2)
                                    {
                                        l2_sc.get([mark]).status(color);
                                    }
                                    else if (ly == 3)
                                    {
                                        l3_sc.get([mark]).status(color);
                                    }
                                }

                            });
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                    }
                });

                $("#PPY").css("display","block");

                var wd = $("#seat").height();
                $("#details").css("height", wd);

            }, 800);

            function setlocationcolor(type, status)
            {
                var color = 'available';
                if (type == 1)
                {
                    //正常
                    switch (status) {
                        case 1:
                            color = 'available';
                            break;
                        case 2:
                            color = 'occupy';
                            break;
                        case 3:
                            color = 'entering';
                            break;
                        case 4:
                            color = 'outing';
                            break;
                        default:
                            color = 'available';
                            break;
                    }
                }
                else if (type == 2)
                {
                    //车厅
                    color = 'hall';
                }
                else if (type == 3)
                {
                    //禁用
                    color = 'disable';
                }
                else if (type ==5)
                {
                    //无效
                    color = 'unavailable';
                }
                else if (type ==6) {
                    //缓存车位                  
                    switch (status) {
                        case 1:
                            color = 'temp';
                            break;
                        case 2:
                            color = 'occupy';
                            break;
                        case 3:
                            color = 'entering';
                            break;
                        case 4:
                            color = 'outing';
                            break;
                        default:                           
                            break;
                    }
                }
                else if (type == 7) {
                    //禁用缓存车位
                    color = 'disabletemp';
                }
                return color;
            }

            //启用
            $("#btnenable").click(function () {
                var addrs = $("#lctn").val();
                disloaction(addrs, false);
            });
            //禁用
            $("#btndisable").click(function () {
                var addrs = $("#lctn").val();
                disloaction(addrs, true);
            });

            function disloaction(lctn, dis)
            {               
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("ManualDisLocation")",
                    data: { "info":lctn,"isdis":dis},
                    dataType: "json",
                    cache: false,                   
                    success: function (data) {
                        BootstrapDialog.show({
                            title: "温馨提示",
                            message: data.Message
                        });                       
                    }
                });
            }
            //Date(1391141532000)的字符串转换成javascript中的日期对象
            function formatDate(dt)
            {
                var milliseconds = parseInt(dt.replace(/\D/igm, ""));
                var newdate = new Date(milliseconds).Format("yyyy-MM-dd hh:mm:ss");
                return newdate.toLocaleString();
            }

            Date.prototype.Format = function (fmt) { //author: meizz 
                var o = {
                    "M+": this.getMonth() + 1, //月份 
                    "d+": this.getDate(), //日 
                    "h+": this.getHours(), //小时 
                    "m+": this.getMinutes(), //分 
                    "s+": this.getSeconds(), //秒 
                    "q+": Math.floor((this.getMonth() + 3) / 3), //季度 
                    "S": this.getMilliseconds() //毫秒 
                };
                if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
                for (var k in o)
                    if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
                return fmt;
            }


            /*
             *signalr 引入
             *
            */
            var hubs = $.connection.parkingHub;

            //供服务端调用的方法定义
            $.extend(hubs.client, {
                serveOpened: function () {
                    $("#svcStatus").html("启动中...");
                    $("#svcRun").removeClass("btn-info").addClass("btn-default").prop("disabled", true);
                    $("#svcStop").addClass("btn-info").prop("disabled", false);
                },

                serveClosed: function () {
                    $("#svcStatus").html("已停止...");
                    $("#svcRun").addClass("btn-info").prop("disabled", false);
                    $("#svcStop").removeClass("btn-info").addClass("btn-default").prop("disabled", true);
                },

                //Define a function to get 'location updated' events               
                feedbackLocInfo: function (lctn) {                    
                    
                    var whs = lctn.Warehouse;
                    if (whs == 1)
                    {
                        var ly = lctn.LocLayer;
                        var clmn = lctn.LocColumn;
                        var sd = lctn.LocSide;
                        var mark = whs + '_' + sd + '_' + clmn + '_' + ly;
                        var color = setlocationcolor(lctn.Type, lctn.Status);
                        if (ly == 1) {
                            l1_sc.get([mark]).status(color);
                        }
                        else if (ly == 2) {
                            l2_sc.get([mark]).status(color);
                        }
                        else if (ly == 3) {
                            l3_sc.get([mark]).status(color);
                        }
                    }
                    //更新车位显示区域
                    var adrs = lctn.Warehouse + '_' + sd + '_' + clmn + '_' + ly;
                    if ($("#lctn").val() == adrs) {                       
                        var $disp = $("#selected-seats");

                        var html = '<li>库区：' + lctn.Warehouse + '</li>';
                        $disp.html(html);
                        html = '<li>地址：' + lctn.LocSide + '边' + lctn.LocColumn + '列' + lctn.LocLayer + '层</li>';
                        $disp.append(html);
                        html = '<li id="li_type">类型：' + lctn.Type + '</li>';
                        $disp.append(html);
                        html = '<li>状态：' + lctn.Status + '</li>';
                        $disp.append(html);
                        html = '<li>车位尺寸：<b>' + lctn.LocSize + '</b></li>';
                        $disp.append(html);
                        html = '<li>用户卡号：' + lctn.ICCode + '</li>';
                        $disp.append(html);
                        html = '<li>轴距：' + lctn.WheelBase + '</li>';
                        $disp.append(html);
                        html = '<li>车辆外形：' + lctn.CarSize + '</li>';
                        $disp.append(html);
                        html = '<li>车牌：' + lctn.PlateNum + '</li>';
                        $disp.append(html);
                        html = '<li>入库时间：<br/>' + lctn.InDate + '</li>';
                        $disp.append(html);

                    }

                }
            });

            //添加客户端调用
            $("#svcRun").click(function () {
                checkLogin("run");
            });

            $("#svcStop").click(function () {
                BootstrapDialog.show({
                    title: "友情提示",
                    message: "<p class='text-danger text-center'>你确定要关闭后台服务？ <span class='text-info'>关闭后将无法对设备进行自动控制！</span></p>",
                    buttons: [{
                        label: "确 定",
                        action: function (self) {
                            checkLogin("stop");
                            self.close();
                        }
                    }, {
                        label: "取 消",
                        action: function (self) {
                            self.close();
                        }
                    }]
                });
            });

            //检查客户端
            function checkLogin(name) {
                $.ajax({
                    url: "/Account/Validate",
                    type: "GET",
                    cache: false,
                    dataType: "text",
                    success: function (data, state) {

                        if (data == "true") {
                            if (name == "run") {
                                hubs.server.openServe();
                            }
                            else if (name == "stop") {
                                hubs.server.closeServe();
                            }
                        }
                        else {
                            BootstrapDialog.show({
                                title: "温馨提示",
                                message: "<p class='text-info text-center'>请登陆后，再执行操作！</p>",
                                buttons: [{
                                    label: "关闭",
                                    action: function (self) {
                                        self.close();
                                    }
                                }]
                            });
                        }
                    },
                    error: function (er) {
                        console.log(er);
                    }
                });
            }

            //start the connection
            $.connection.hub.start()
                            .then(function () {
                                return hubs.server.getStatus();
                            })
                            .done(function (status) {
                                if (status == "Close") {
                                    hubs.client.serveClosed();
                                } else if (status == "Open") {
                                    hubs.client.serveOpened();
                                }
                            });
           
            //signalr 结束


        });
    </script>

    }