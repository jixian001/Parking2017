@{
    Layout = "~/Views/Shared/_Special.cshtml";
    ViewBag.Title = "主页";
}

<div class="row">
    <div id="myCarousel" class="carousel slide">
        <ol class="carousel-indicators">
            <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
            <li data-target="#myCarousel" data-slide-to="1"></li>
            <li data-target="#myCarousel" data-slide-to="2"></li>
        </ol>
        <div class="carousel-inner">
            <div class="item active" align="center">
                <img src="@Url.Content("~/Image/first.jpg")" alt="First slide" style="height:200px" />
            </div>
            <div class="item" align="center">
                <img src="@Url.Content("~/Image/second.jpg")" alt="Second slide" style="height:200px" />
            </div>
            <div class="item" align="center">
                <img src="@Url.Content("~/Image/three.jpg")" alt="Three slide" style="height:200px" />
            </div>
        </div>
        <a class="carousel-control left" href="#myCarousel" data-slide="prev">&lsaquo;</a>
        <a class="carousel-control right" href="#myCarousel" data-slide="next">&rsaquo;</a>
    </div>
</div>
<br />
<div class="row">
    <span class="text-primary">车位分布</span>
</div>
<div class="row">
    <div class="col-md-10 bger dheight">
        <div class="seat wrapper">
            <div id="seat">
                @* 平面移动库 *@
                <div id="PPY" style="display:none">
                    @* 1号库 *@
                    <input type="hidden" value="1" id="wh1" name="wh1" />
                    <div id="L2-map" style="width:100%">
                        <p style="margin-bottom:7px;margin-top:5px" class="text-danger">&nbsp;&nbsp;二&nbsp;层</p>
                    </div>
                    <div id="L1-map" style="width:100%">
                        <p style="margin-bottom:7px;margin-top:5px" class="text-danger">&nbsp;&nbsp;一&nbsp;层</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-2 bger">
        <div class="booking-details" id="details" style="height:100%">            
            <input type="hidden" id="lctn" name="lctn" />
            <h4 class="text-center">已选中的车位(<span id="addr">0</span>)：</h4>
            <ul id="selected-seats"></ul>           
            <div id="oprt" class="text-center" style="display:none">
                <button type="button" id="btnenable">启用</button>
                <button type="button" id="btndisable">禁用</button>
            </div>
            <br />
            <div style="border:1px solid #808080">
                <div class="text-info text-center">
                    <a data-toggle="collapse" href="#one">车位颜色定义</a>
                </div>
                <div id="one" class="panel-collapse collapse text-center">
                    <div class="lbl lblhall">车厅</div>
                    <div class="lbl lbldisable">禁用</div>
                    <div class="lbl lblinvalid">无效</div>
                    <div class="lbl lbltemp">缓存</div>
                    <div class="lbl lbldisabletemp">缓禁</div>
                    <div class="lbl lbloccupy">占用</div>
                    <div class="lbl lblentering">入库</div>
                    <div class="lbl lblouting">出库</div>
                    <div class="lbl lblspace">空闲</div>
                </div>
            </div>
        </div>
    </div> 
</div>
<div class="row">
    <span class="text-primary">设备信息</span>
</div>
<div id="devices" class="row bger"></div>


@section scripts{
    @Styles.Render("~/Content/loccharts")
    @Scripts.Render("~/bundles/loccharts")
    @Styles.Render("~/Content/common")
    @Styles.Render("~/Content/devform")
    <script>
        
        $(function () {
            //加载车位信息
            var side = 3, column = 18, layer = 2;
            var warehouse = $("input[name='wh1']").val();
            //计算，固定div及设置cell宽度
            var width = $('#seat').width() - 20;  //-20

            //先设置map
            var def_map = [];
            for (var i = 0; i < side + 1; i++) {
                var row = '';
                for (var j = 0; j < column; j++) {
                    if (i == side - 1) {
                        row += '_';
                        continue;
                    }
                    row += 'e';
                }
                def_map.push(row);
            }

            var l2_sc = $('#L2-map').seatCharts(2,{
                map: def_map,
                seats: {
                    e: {
                        classes: 'economy-class', //your custom CSS class
                        category: '经济舱'
                    }
                },
                naming: {
                    top: false,
                    left: false,
                    //rows:['3','1','','2'],
                    getLabel: function (character, row, column) {
                        var rw = row;
                        if (row == 1) {
                            rw = 4;
                        } else if (row == 2) {
                            rw = 2;
                        } else if (row == 4) {
                            rw = 1;
                        }
                        return rw + '_' + column;
                    },
                    getId: function (character, row, column) {
                        var rw = row;
                        if (row == 1) {
                            rw = 4;
                        } else if (row == 2) {
                            rw = 2;
                        } else if (row == 4) {
                            rw = 1;
                        }
                        return warehouse + '_' + rw + '_' + column + '_' + 2;
                    }
                },
                click: function () {
                    //$('#cart-item-' + this.settings.id).remove();
                    var msg = this.settings.id;
                    var arr = msg.split("_");
                    if (arr.length < 4) {
                        alert(this.settings.id + " 数组长度不对！");
                        return;
                    }
                    displayInfo(msg);
                    return this.status();
                },
                blur: function () {
                    return this.status();
                }
            });

            var l1_sc = $('#L1-map').seatCharts(1,{
                map: def_map,
                seats: {
                    e: {
                        classes: 'economy-class', //your custom CSS class
                        category: '经济舱'
                    }
                },
                naming: {
                    top: false,
                    left: false,
                    //rows: ['3', '1', '', '2'],
                    getLabel: function (character, row, column) {
                        var rw = row;
                        if (row == 1) {
                            rw = 4;
                        } else if (row == 2) {
                            rw = 2;
                        } else if (row == 4) {
                            rw = 1;
                        }
                        return rw + '_' + column;
                    },
                    getId: function (character, row, column) {
                        var rw = row;
                        if (row == 1) {
                            rw = 4;
                        } else if (row == 2) {
                            rw = 2;
                        } else if (row == 4) {
                            rw = 1;
                        }
                        return warehouse + '_' + rw + '_' + column + '_' + 1;
                    }
                },
                click: function () {

                    var msg = this.settings.id;
                    var arr = msg.split("_");
                    if (arr.length < 4) {
                        alert(this.settings.id + " 数组长度不对！");
                        return;
                    }
                    displayInfo(msg);
                    return this.status();
                },
                blur: function () {
                    return this.status();
                }
            });
           
            //动态修改单元格宽高
            $('div .seatCharts-container').width(width);
            var $seatcell = $('div .seatCharts-cell');
            var cellMargin = 3;
            var cell = (width - column * (cellMargin * 2)) / column;
            $('div .seatCharts-cell').width(cell).height(cell);

            //单击单元格时，显示车位信息
            function displayInfo(msg) {

                console.log("selected location :" + msg);
                $("input[name='lctn']").val(msg);
                var $disp = $("#selected-seats");
                var $addrs = $("#addr");
                var $btn = $("#oprt");
                $addrs.text('');

                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetLocation")",
                    data: { locinfo:msg},
                    dataType: "json",
                    cache: false,
                    beforeSend: function (XMLHttpRequest) {
                        $addrs.text('0');
                        $disp.html('<li>加载中...</li>');
                        $btn.css("display", "none");
                    },
                    success: function (nback) {
                        if (nback.code == 1)
                        {
                            var obj = nback.data;
                            $addrs.text(obj.Address);
                            var html = '<li class="">库区：' + obj.Warehouse + '</li>';
                            $disp.html(html);
                            html = '<li>地址：' + obj.LocSide + '边' + obj.LocColumn + '列' + obj.LocLayer + '层</li>';
                            $disp.append(html);
                            html = '<li id="li_type">类型：' + formatLocType(obj.Type) + '</li>';
                            $disp.append(html);
                            html = '<li>状态：' + formatLocStatus(obj.Status) + '</li>';
                            $disp.append(html);
                            html = '<li>车位尺寸：<b>' + obj.LocSize + '</b></li>';
                            $disp.append(html);
                            html = '<li>存车凭证：<span class="text-info">' + obj.ICCode + '</span></li>';
                            $disp.append(html);
                            html = '<li>轴距：' + obj.WheelBase + '</li>';
                            $disp.append(html);
                            html = '<li>车辆外形：' + obj.CarSize + '</li>';
                            $disp.append(html);
                            html = '<li>车牌：<span class="text-info">' + obj.PlateNum + '</span></li>';
                            $disp.append(html);
                            html = '<li>入库时间：<span class="text-info"><br>' +formatDate(obj.InDate) + '</span></li>';
                            $disp.append(html);

                            $btn.css("display", "block");
                        }
                        else
                        {
                            $disp.html('<li>' + nback.data + '</li>');
                        }
                    }
                });

                //$("html,body").animate({ scrollTop: ($("#area").offset().top)-60 }, 1500);

                return 'selected';
            }

            //加载设备信息
            setTimeout(function () {

                var $devs = $("#devices");
                //获取设备信息，显示出来
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetDeviceList")",
                    dataType: "json",
                    cache: false,
                    beforeSend: function (XMLHttpRequest) {
                        $devs.html('<p class="text-info text-center">努力加载中...</p>');
                    },
                    success: function (data) {
                        var i = 0;
                        var html = '';
                        $.each(data, function (index, obj) {
                            if (i == 0) {
                                html = '<div class="row">';
                            }
                            else if (i % 4 == 0) {
                                html += '</div><div class="row">';
                            }
                            html += '<div class="col-md-3"><div class="dev">';
                            var tags = obj.Warehouse + '-' + obj.DeviceCode;
                            var info = '<table class="form" id="' +tags + '">';

                            info += '<tr><th class="formTitle">' + "库区" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="wh" value="' + obj.Warehouse + '" disabled/></td></tr>';
                            info += '<tr><th class="formTitle">' + "设备" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="code" value="' + formatDevieCode(obj.DeviceCode) + '" disabled/></td></tr>';
                            info += '<tr><th class="formTitle">' + "地址" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="address" value=" ' + formatAddress(obj.Address) + '" disabled/></td></tr>';
                            info += '<tr><th class="formTitle">' + "模式" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="mode"  value="' + formatMode(obj.Mode) + '" disabled/></td></tr>';
                            info += '<tr><th class="formTitle">' + "是否可用" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="able" value="' + formatAble(obj.IsAble) + '" disabled/></td></tr>';
                            info += '<tr><th class="formTitle"><a href="javascript:void(0)" onclick="hrefAlarm(' + obj.DeviceCode + ')">接收指令</a></th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="accept" value="' + formatAvaible(obj.IsAvailabe) + '" disabled/></td></tr>';
                            info += '<tr><th class="formTitle">' + "自动步" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="step" value="' + obj.RunStep + '"  disabled/></td></tr>';
                            if (obj.DeviceCode < 10)
                            {
                                info += '<tr><th class="formTitle">' + "装载步进" + '</th>';
                                info += '<td class="formValue"><input type="text" class="form-control" id="instep" value="' + obj.InStep + '"  disabled/></td></tr>';
                                info += '<tr><th class="formTitle">' + "卸载步进" + '</th>';
                                info += '<td class="formValue"><input type="text" class="form-control" id="outstep" value="' + obj.OutStep + '"  disabled/></td></tr>';
                            }
                            else
                            {
                                info += '<tr><th class="formTitle">' + "存车步进" + '</th>';
                                info += '<td class="formValue"><input type="text" class="form-control" id="instep" value="' + obj.InStep + '"  disabled/></td></tr>';
                                info += '<tr><th class="formTitle">' + "取车步进" + '</th>';
                                info += '<td class="formValue"><input type="text" class="form-control" id="outstep" value="' + obj.OutStep + '"  disabled/></td></tr>';
                            }

                            info += '<tr><th class="formTitle">' + "作业类型" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="' +"type-"+ obj.Warehouse + obj.DeviceCode + '"  disabled/></td></tr>';
                            info += '<tr><th class="formTitle">' + "存车凭证" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="' + "iccode-" + obj.Warehouse + obj.DeviceCode + '"  disabled/></td></tr>';
                            info += '<tr><th class="formTitle">' + "作业状态" + '</th>';
                            info += '<td class="formValue"><input type="text" class="form-control" id="' + "status-" + obj.Warehouse + obj.DeviceCode + '"  disabled/></td></tr>';

                            info += '</table>';

                            html += info + '</div></div>';
                            i++;

                            //更新TV的位置
                            var tv = obj.DeviceCode
                            if (tv < 10) {
                                var addres = obj.Address;
                                var colstr = addres.substr(1, 2);
                                var laystr = addres.substr(3, 2);

                                var col = parseInt(colstr);
                                var lay = parseInt(laystr);

                                var tvaddrs = lay + "_" + col;
                                console.log(tvaddrs);

                                updateTvLocation(tvaddrs, tv);
                            }

                        });
                        html += '</div>';

                        $devs.html(html);

                        //更新作业任务
                        updateDevTasLst();
                       
                    }
                });

                //初始化车位数据
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetLocationList")",
                    dataType: "json",
                    cache: false,
                    success: function (resp) {
                        if (resp.code == 1) {
                            $.each(resp.data, function (index, obj) {
                                var whs = obj.Warehouse;
                                if (whs == 1)
                                {
                                    var ly = obj.LocLayer;
                                    var clmn = obj.LocColumn;
                                    var sd = obj.LocSide;
                                    var mark = whs + '_' + sd + '_' + clmn + '_' + ly;
                                    var color = setlocationcolor(obj.Type, obj.Status);
                                    if (ly == 1)
                                    {
                                        l1_sc.get([mark]).status(color);
                                    }
                                    else if (ly == 2)
                                    {
                                        l2_sc.get([mark]).status(color);
                                    }
                                    else if (ly == 3)
                                    {
                                        l3_sc.get([mark]).status(color);
                                    }
                                }
                            });

                            //获取车位的统计信息
                            updateLocStaInfo();
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {

                    }
                });

                $("#PPY").css("display","block");
                $("#area").css("display", "block");

                var wd = $(".dheight").height();
                $("#details").css("height", wd);

                //更新停库时间
                $.post("@Url.Action("UpdateLocalTime")", function (result) {
                    console.log("code-" + result.Code + " ,message-" + result.Message);
                    if (result.Code == 2)
                    {
                        //提示系统时间对应不上
                        alert(result.Message);
                    }
                    else if (result.Code == 3)
                    {
                        //顶部显示倒计时
                        $("h1.text-center").css("display","block").html(result.Message);
                    }
                    else
                    {
                        $("#company").attr("title", result.Message);
                    }
                });

            }, 2000);

            function updateDevTasLst() {
                //更新设备作业状态
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetDeviceTaskLst")",
                    dataType: "json",
                    cache: false,
                    success: function (dLst) {
                        //迭代变量
                        $.each(dLst, function (index, detail) {
                            var code = detail.DevDescp;

                            var ttype = "type-" + code;
                            $("input[id='" + ttype + "']").val(detail.TaskType);

                            var proof = "iccode-" + code;
                            $("input[id='" + proof + "']").val(detail.Proof);

                            var state = "status-" + code;
                            $("input[id='" + state + "']").val(detail.Status);
                        });
                    }
                });
            }

            function updateLocStaInfo() {
                //更新下车位信息
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetLocStatInfo")",
                    dataType: "json",
                    cache: false,
                    success: function (json) {
                        $("span[id='total']").text(json.Total);
                        $("span[id='occupy']").text(json.Occupy);
                        $("span[id='space']").text(json.Space);
                        $("span[id='big']").text(json.BigSpace);
                        $("span[id='small']").text(json.SmallSpace);
                        $("span[id='fix']").text(json.FixLoc);
                    }
                });
            }

            var native_tv1 = "";
            var native_tv2 = "";

            function updateTvLocation(addrs, code)
            {                
                if (code == 1)
                {
                    if (native_tv1 != "")
                    {
                        var $tv1 = $("#" + native_tv1);
                        $tv1.css({ "background-color":"#ffffff"});
                        $tv1.empty();                       
                    }  
                    native_tv1 = addrs;
                }
                else if (code == 2)
                {                    
                    if (native_tv2 != "") {
                        var $tv1 = $("#" + native_tv2);
                        $tv1.css({ "background-color":"#ffffff"});
                        $tv1.empty();                       
                    }
                    native_tv2 = addrs;
                }

                $("#" + addrs).css({ "background-color": "#f8baba", "border-radius": "5px", "font-size": "15px" }).html(code);
            }

            function setlocationcolor(type, status)
            {
                var color = 'available';
                if (type == 1)
                {
                    //正常
                    switch (status) {
                        case 1:
                            color = 'available';
                            break;
                        case 2:
                            color = 'occupy';
                            break;
                        case 3:
                            color = 'entering';
                            break;
                        case 4:
                            color = 'outing';
                            break;
                        case 5:
                            color = 'outing';
                            break;
                        default:
                            color = 'available';
                            break;
                    }
                }
                else if (type == 2)
                {
                    //车厅
                    color = 'hall';
                }
                else if (type == 3)
                {
                    //禁用
                    color = 'disable';
                }
                else if (type ==5)
                {
                    //无效
                    color = 'unavailable';
                }
                else if (type ==6) {
                    //缓存车位
                    switch (status) {
                        case 1:
                            color = 'temp';
                            break;
                        case 2:
                            color = 'occupy';
                            break;
                        case 3:
                            color = 'entering';
                            break;
                        case 4:
                            color = 'outing';
                            break;
                        default:
                            break;
                    }
                }
                else if (type == 7) {
                    //禁用缓存车位
                    color = 'disabletemp';
                }
                return color;
            }

            //启用
            $("#btnenable").click(function () {
                var addrs = $("#lctn").val();
                disloaction(addrs, false);
            });

            //禁用
            $("#btndisable").click(function () {
                var addrs = $("#lctn").val();
                disloaction(addrs, true);
            });

            function disloaction(lctn, dis)
            {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("ManualDisLocation")",
                    data: { "info":lctn,"isdis":dis},
                    dataType: "json",
                    cache: false,
                    success: function (data) {
                        BootstrapDialog.show({
                            title: "温馨提示",
                            message: data.Message
                        });
                    }
                });
            }

            //Date(1391141532000)的字符串转换成javascript中的日期对象
            function formatDate(dt)
            {
                var milliseconds = parseInt(dt.replace(/\D/igm, ""));
                var newdate = new Date(milliseconds).Format("yyyy-MM-dd hh:mm:ss");
                return newdate.toLocaleString();
            }

            Date.prototype.Format = function (fmt) { //author: meizz
                var o = {
                    "M+": this.getMonth() + 1, //月份
                    "d+": this.getDate(), //日
                    "h+": this.getHours(), //小时
                    "m+": this.getMinutes(), //分
                    "s+": this.getSeconds(), //秒
                    "q+": Math.floor((this.getMonth() + 3) / 3), //季度
                    "S": this.getMilliseconds() //毫秒
                };
                if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
                for (var k in o)
                    if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
                return fmt;
            }

            //格式化地址
            function formatAddress(adrs)
            {
                if (adrs.length > 4)
                {
                    var line = adrs.substring(0, 1);
                    var column = adrs.substring(1, 3);
                    var layer = adrs.substring(3);
                    return line + " 边 " + column + " 列 " + layer + " 层";
                }
                return adrs;
            }

            //格式化设备号
            function formatDevieCode(code)
            {
                var msg = " ";
                if (code > 10)
                {
                    msg += (code - 10).toString() + " #车厅";
                }
                else
                {
                    msg += code.toString() + " #ETV";
                }
                return msg;
            }

            //格式化设备模式
            function formatMode(mode)
            {
                var msg =" ";
                switch (mode)
                {
                    case 4:
                        msg += "全自动";
                        break;
                    case 3:
                        msg += "单机自动";
                        break;
                    case 2:
                        msg = "手动";
                        break;
                    case 1:
                        msg += "维修";
                        break;
                    default:
                        msg = mode;
                        break;
                }
                return msg;
            }

            //可用性
            function formatAble(isable)
            {
                if (isable == 1)
                {
                    return " 是";
                }
                else
                {
                    return " 否";
                }
            }

            //可接收新指令
            function formatAvaible(avail)
            {
                if (avail == 1)
                {
                    return " 可接收指令";
                }
                else
                {
                    return " 不可接收指令";
                }
            }

            //车位类型
            function formatLocType(type)
            {
                var msg="";
                switch (type)
                {
                    case 1:
                        msg="正常";
                        break;
                    case 2:
                        msg = "车厅";
                        break;
                    case 3:
                        msg = "禁用";
                        break;
                    case 5:
                        msg = "无效";
                        break;
                    case 6:
                        msg = "缓存";
                        break;
                    case 7:
                        msg = "禁用";
                        break;
                    default:
                        msg = type;
                        break;
                }
                return msg;
            }

            //车位状态
            function formatLocStatus(state)
            {
                var msg="";
                switch (state)
                {
                    case 0:
                    case 1:
                        msg = "空闲";
                        break;
                    case 2:
                        msg = "占用";
                        break;
                    case 3:
                        msg = "入库";
                        break;
                    case 4:
                        msg = "出库";
                        break;
                    case 5:
                        msg = "取物";
                        break;
                    case 6:
                        msg = "无效";
                        break;
                    case 7:
                        msg = "待挪";
                        break;
                    default:
                        msg = state;
                        break;
                }
                return msg;
            }

            /*
             *signalr 引入
             *
            */
            var hubs = $.connection.parkingHub;

            //供服务端调用的方法定义
            $.extend(hubs.client, {

                //Define a function to get 'location updated' events
                //车位信息推送
                feedbackLocInfo: function (lctn) {

                    var whs = lctn.Warehouse;
                    if (whs == 1) {
                        var ly = lctn.LocLayer;
                        var clmn = lctn.LocColumn;
                        var sd = lctn.LocSide;
                        var mark = whs + '_' + sd + '_' + clmn + '_' + ly;
                        var color = setlocationcolor(lctn.Type, lctn.Status);
                        if (ly == 1) {
                            l1_sc.get([mark]).status(color);
                        }
                        else if (ly == 2) {
                            l2_sc.get([mark]).status(color);
                        }
                      
                    }

                    //更新车位显示区域
                    var adrs = lctn.Warehouse + '_' + sd + '_' + clmn + '_' + ly;
                    if ($("#lctn").val() == adrs) {
                        var $disp = $("#selected-seats");

                        var html = '<li>库区：' + lctn.Warehouse + '</li>';
                        $disp.html(html);
                        html = '<li>地址：' + lctn.LocSide + '边' + lctn.LocColumn + '列' + lctn.LocLayer + '层</li>';
                        $disp.append(html);
                        html = '<li id="li_type">类型：' + formatLocType(lctn.Type) + '</li>';
                        $disp.append(html);
                        html = '<li>状态：' + formatLocStatus(lctn.Status) + '</li>';
                        $disp.append(html);
                        html = '<li>车位尺寸：<b>' + lctn.LocSize + '</b></li>';
                        $disp.append(html);
                        html = '<li>用户卡号：<span class="text-info">' + lctn.ICCode + '</span></li>';
                        $disp.append(html);
                        html = '<li>轴距：' + lctn.WheelBase + '</li>';
                        $disp.append(html);
                        html = '<li>车辆外形：' + lctn.CarSize + '</li>';
                        $disp.append(html);
                        html = '<li>车牌：<span class="text-info">' + lctn.PlateNum + '</span></li>';
                        $disp.append(html);
                        html = '<li>入库时间：<span class="text-info">' + lctn.InDate + '</span></li>';
                        $disp.append(html);
                    }
                    console.log("location addrs-" + adrs + " callback");
                },

                //设备信息推送
                feedbackDevice: function (smg) {
                    //先查询DIV是否已加载完成
                    var wh = smg.Warehouse;
                    var code = smg.DeviceCode;
                    var name = wh + '-' + code;
                    var obj = $("table[id='" + name + "']");
                    if (obj.length == 0) {
                        console.log("feedback deviec info ,but device region no exist");
                        return;
                    }
                    console.log(name + " object exist");
                    $("table[id='" + name + "'] input[id='address']").val(formatAddress(smg.Address));
                    $("table[id='" + name + "'] input[id='mode']").val(formatMode(smg.Mode));
                    $("table[id='" + name + "'] input[id='able']").val(formatAble(smg.IsAble));
                    $("table[id='" + name + "'] input[id='accept']").val(formatAvaible(smg.IsAvailabe));
                    $("table[id='" + name + "'] input[id='step']").val(smg.RunStep);
                    $("table[id='" + name + "'] input[id='instep']").val(smg.InStep);
                    $("table[id='" + name + "'] input[id='outstep']").val(smg.OutStep);

                    if (smg.TaskID == 0)
                    {
                        var code = wh + "" + code;

                        var ttype = "type-" + code;
                        $("input[id='" + ttype + "']").val("");

                        var proof = "iccode-" + code;
                        $("input[id='" + proof + "']").val("");

                        var state = "status-" + code;
                        $("input[id='" + state + "']").val("");
                    }

                    //更新TV的位置
                    var tv = smg.DeviceCode
                    if (tv < 10) {
                        var addres = smg.Address;
                        var colstr = addres.substr(1, 2);
                        var laystr = addres.substr(3, 2);

                        var col = parseInt(colstr);
                        var lay = parseInt(laystr);

                        var tvaddrs = lay + "_" + col;
                        console.log(tvaddrs);

                        updateTvLocation(tvaddrs, tv);
                    }

                },

                //推送作业信息
                feedbackImpTask: function (detail) {
                    var code = detail.DevDescp;

                    var ttype = "type-" + code;
                    $("input[id='" + ttype + "']").val(detail.TaskType);

                    var proof = "iccode-" + code;
                    $("input[id='" + proof + "']").val(detail.Proof);

                    var state = "status-" + code;
                    $("input[id='" + state + "']").val(detail.Status);
                },

                //推送统计信息
                feedbackStatistInfo: function (json) {
                    $("span[id='total']").text(json.Total);
                    $("span[id='occupy']").text(json.Occupy);
                    $("span[id='space']").text(json.Space);
                    $("span[id='big']").text(json.BigSpace);
                    $("span[id='small']").text(json.SmallSpace);
                    $("span[id='fix']").text(json.FixLoc);
                },

                //推送设备故障状态显示
                feedbackDeviceFaultStat: function (data) {
                    var wh = data.Warehouse;
                    var code = data.DeviceCode;
                    var red = data.IsRed;

                    var name = wh + '-' + code;
                    //console.log('feedback device - ' + name + ' status- ' + red);

                    var obj = $("table[id='" + name + "']");
                    if (obj.length == 0) {
                        console.log("feedback deviec info ,but device region no exist");
                        return;
                    }
                    var $tags = $("table[id='" + name + "'] input[id='accept']");
                    if (red == 1) {
                        $tags.css("background-color", "red");
                    }
                    else {
                        $tags.css("background-color", "lightgray");
                    }

                }

            });

            //start the connection
            $.connection.hub.start()
                            .then(function () {
                                //注册下
                                hubs.server.register("6193");
                            })
                            .done(function () {

                            });

            //signalr 结束


        });

        function hrefAlarm(code)
        {
            if (code == 11) {
                window.location.href = "/SystemManager/FaultSummary/Index";
            }
            else if (code == 12) {
                window.location.href = "/SystemManager/FaultSummary/Hall2";
            }
            else if (code == 1) {
                window.location.href = "/SystemManager/FaultSummary/TV1";
            }
            else if (code == 2) {
                window.location.href = "/SystemManager/FaultSummary/TV2";
            }         
        }

    </script>

    }